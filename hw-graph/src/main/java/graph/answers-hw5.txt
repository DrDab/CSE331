## CSE 331 hw-graph Coding Questions

## Part 2
###########################################################################

Briefly explain why you included the operations you did and why you feel they are a sufficient
interface to a graph. If your design includes multiple classes or interfaces, explain why you
included each one; if not, explain whether you considered additional classes and why you decided
not to include them.

I included the operations I did to satisfy the operations needed to populate a graph from an empty graph,
traverse the populated graph from any given node in the graph, and modify the graph after creation.

To populate the graph from an empty graph, the addNode and addEdge methods are needed to add nodes and edges
to the graph.

To traverse the graph a node to start from is needed, which could be selected from the getNodes method,
which lists all the nodes in the Graph. Then for the current node, the getChildNodes method could be used to
select the next node to visit.

To edit the graph, the getNodes, getEdges, hasEdge, and hasNode methods are needed to know the existing nodes
and edges such that the appropriate changes can be made with the renameNode, renameEdge, removeNode and removeEdge
methods (which are used to rename the nodes, edges, or remove nodes or edges from the Graph respectively). The
getNodeCount and getEdgeCount methods are helpful for debugging the graph.

## Part 3
###########################################################################

What was your testing strategy for this assignment? How do your script tests and JUnit tests
differ from each other (if they do), and why?


TODO: Your answer here!
